import { BinaryenOp } from "./operations";

export const ClzInt32: BinaryenOp;
export const CtzInt32: BinaryenOp;
export const PopcntInt32: BinaryenOp;
export const NegFloat32: BinaryenOp;
export const AbsFloat32: BinaryenOp;
export const CeilFloat32: BinaryenOp;
export const FloorFloat32: BinaryenOp;
export const TruncFloat32: BinaryenOp;
export const NearestFloat32: BinaryenOp;
export const SqrtFloat32: BinaryenOp;
export const EqZInt32: BinaryenOp;
export const ClzInt64: BinaryenOp;
export const CtzInt64: BinaryenOp;
export const PopcntInt64: BinaryenOp;
export const NegFloat64: BinaryenOp;
export const AbsFloat64: BinaryenOp;
export const CeilFloat64: BinaryenOp;
export const FloorFloat64: BinaryenOp;
export const TruncFloat64: BinaryenOp;
export const NearestFloat64: BinaryenOp;
export const SqrtFloat64: BinaryenOp;
export const EqZInt64: BinaryenOp;
export const ExtendSInt32: BinaryenOp;
export const ExtendUInt32: BinaryenOp;
export const WrapInt64: BinaryenOp;
export const TruncSFloat32ToInt32: BinaryenOp;
export const TruncSFloat32ToInt64: BinaryenOp;
export const TruncUFloat32ToInt32: BinaryenOp;
export const TruncUFloat32ToInt64: BinaryenOp;
export const TruncSFloat64ToInt32: BinaryenOp;
export const TruncSFloat64ToInt64: BinaryenOp;
export const TruncUFloat64ToInt32: BinaryenOp;
export const TruncUFloat64ToInt64: BinaryenOp;
export const TruncSatSFloat32ToInt32: BinaryenOp;
export const TruncSatSFloat32ToInt64: BinaryenOp;
export const TruncSatUFloat32ToInt32: BinaryenOp;
export const TruncSatUFloat32ToInt64: BinaryenOp;
export const TruncSatSFloat64ToInt32: BinaryenOp;
export const TruncSatSFloat64ToInt64: BinaryenOp;
export const TruncSatUFloat64ToInt32: BinaryenOp;
export const TruncSatUFloat64ToInt64: BinaryenOp;
export const ReinterpretFloat32: BinaryenOp;
export const ReinterpretFloat64: BinaryenOp;
export const ConvertSInt32ToFloat32: BinaryenOp;
export const ConvertSInt32ToFloat64: BinaryenOp;
export const ConvertUInt32ToFloat32: BinaryenOp;
export const ConvertUInt32ToFloat64: BinaryenOp;
export const ConvertSInt64ToFloat32: BinaryenOp;
export const ConvertSInt64ToFloat64: BinaryenOp;
export const ConvertUInt64ToFloat32: BinaryenOp;
export const ConvertUInt64ToFloat64: BinaryenOp;
export const PromoteFloat32: BinaryenOp;
export const DemoteFloat64: BinaryenOp;
export const ReinterpretInt32: BinaryenOp;
export const ReinterpretInt64: BinaryenOp;
export const ExtendS8Int32: BinaryenOp;
export const ExtendS16Int32: BinaryenOp;
export const ExtendS8Int64: BinaryenOp;
export const ExtendS16Int64: BinaryenOp;
export const ExtendS32Int64: BinaryenOp;
export const AddInt32: BinaryenOp;
export const SubInt32: BinaryenOp;
export const MulInt32: BinaryenOp;
export const DivSInt32: BinaryenOp;
export const DivUInt32: BinaryenOp;
export const RemSInt32: BinaryenOp;
export const RemUInt32: BinaryenOp;
export const AndInt32: BinaryenOp;
export const OrInt32: BinaryenOp;
export const XorInt32: BinaryenOp;
export const ShlInt32: BinaryenOp;
export const ShrUInt32: BinaryenOp;
export const ShrSInt32: BinaryenOp;
export const RotLInt32: BinaryenOp;
export const RotRInt32: BinaryenOp;
export const EqInt32: BinaryenOp;
export const NeInt32: BinaryenOp;
export const LtSInt32: BinaryenOp;
export const LtUInt32: BinaryenOp;
export const LeSInt32: BinaryenOp;
export const LeUInt32: BinaryenOp;
export const GtSInt32: BinaryenOp;
export const GtUInt32: BinaryenOp;
export const GeSInt32: BinaryenOp;
export const GeUInt32: BinaryenOp;
export const AddInt64: BinaryenOp;
export const SubInt64: BinaryenOp;
export const MulInt64: BinaryenOp;
export const DivSInt64: BinaryenOp;
export const DivUInt64: BinaryenOp;
export const RemSInt64: BinaryenOp;
export const RemUInt64: BinaryenOp;
export const AndInt64: BinaryenOp;
export const OrInt64: BinaryenOp;
export const XorInt64: BinaryenOp;
export const ShlInt64: BinaryenOp;
export const ShrUInt64: BinaryenOp;
export const ShrSInt64: BinaryenOp;
export const RotLInt64: BinaryenOp;
export const RotRInt64: BinaryenOp;
export const EqInt64: BinaryenOp;
export const NeInt64: BinaryenOp;
export const LtSInt64: BinaryenOp;
export const LtUInt64: BinaryenOp;
export const LeSInt64: BinaryenOp;
export const LeUInt64: BinaryenOp;
export const GtSInt64: BinaryenOp;
export const GtUInt64: BinaryenOp;
export const GeSInt64: BinaryenOp;
export const GeUInt64: BinaryenOp;
export const AddFloat32: BinaryenOp;
export const SubFloat32: BinaryenOp;
export const MulFloat32: BinaryenOp;
export const DivFloat32: BinaryenOp;
export const CopySignFloat32: BinaryenOp;
export const MinFloat32: BinaryenOp;
export const MaxFloat32: BinaryenOp;
export const EqFloat32: BinaryenOp;
export const NeFloat32: BinaryenOp;
export const LtFloat32: BinaryenOp;
export const LeFloat32: BinaryenOp;
export const GtFloat32: BinaryenOp;
export const GeFloat32: BinaryenOp;
export const AddFloat64: BinaryenOp;
export const SubFloat64: BinaryenOp;
export const MulFloat64: BinaryenOp;
export const DivFloat64: BinaryenOp;
export const CopySignFloat64: BinaryenOp;
export const MinFloat64: BinaryenOp;
export const MaxFloat64: BinaryenOp;
export const EqFloat64: BinaryenOp;
export const NeFloat64: BinaryenOp;
export const LtFloat64: BinaryenOp;
export const LeFloat64: BinaryenOp;
export const GtFloat64: BinaryenOp;
export const GeFloat64: BinaryenOp;
export const AtomicRMWAdd: BinaryenOp;
export const AtomicRMWSub: BinaryenOp;
export const AtomicRMWAnd: BinaryenOp;
export const AtomicRMWOr: BinaryenOp;
export const AtomicRMWXor: BinaryenOp;
export const AtomicRMWXchg: BinaryenOp;
export const SplatVecI8x16: BinaryenOp;
export const ExtractLaneSVecI8x16: BinaryenOp;
export const ExtractLaneUVecI8x16: BinaryenOp;
export const ReplaceLaneVecI8x16: BinaryenOp;
export const SplatVecI16x8: BinaryenOp;
export const ExtractLaneSVecI16x8: BinaryenOp;
export const ExtractLaneUVecI16x8: BinaryenOp;
export const ReplaceLaneVecI16x8: BinaryenOp;
export const SplatVecI32x4: BinaryenOp;
export const ExtractLaneVecI32x4: BinaryenOp;
export const ReplaceLaneVecI32x4: BinaryenOp;
export const SplatVecI64x2: BinaryenOp;
export const ExtractLaneVecI64x2: BinaryenOp;
export const ReplaceLaneVecI64x2: BinaryenOp;
export const SplatVecF32x4: BinaryenOp;
export const ExtractLaneVecF32x4: BinaryenOp;
export const ReplaceLaneVecF32x4: BinaryenOp;
export const SplatVecF64x2: BinaryenOp;
export const ExtractLaneVecF64x2: BinaryenOp;
export const ReplaceLaneVecF64x2: BinaryenOp;
export const EqVecI8x16: BinaryenOp;
export const NeVecI8x16: BinaryenOp;
export const LtSVecI8x16: BinaryenOp;
export const LtUVecI8x16: BinaryenOp;
export const GtSVecI8x16: BinaryenOp;
export const GtUVecI8x16: BinaryenOp;
export const LeSVecI8x16: BinaryenOp;
export const LeUVecI8x16: BinaryenOp;
export const GeSVecI8x16: BinaryenOp;
export const GeUVecI8x16: BinaryenOp;
export const EqVecI16x8: BinaryenOp;
export const NeVecI16x8: BinaryenOp;
export const LtSVecI16x8: BinaryenOp;
export const LtUVecI16x8: BinaryenOp;
export const GtSVecI16x8: BinaryenOp;
export const GtUVecI16x8: BinaryenOp;
export const LeSVecI16x8: BinaryenOp;
export const LeUVecI16x8: BinaryenOp;
export const GeSVecI16x8: BinaryenOp;
export const GeUVecI16x8: BinaryenOp;
export const EqVecI32x4: BinaryenOp;
export const NeVecI32x4: BinaryenOp;
export const LtSVecI32x4: BinaryenOp;
export const LtUVecI32x4: BinaryenOp;
export const GtSVecI32x4: BinaryenOp;
export const GtUVecI32x4: BinaryenOp;
export const LeSVecI32x4: BinaryenOp;
export const LeUVecI32x4: BinaryenOp;
export const GeSVecI32x4: BinaryenOp;
export const GeUVecI32x4: BinaryenOp;
export const EqVecI64x2: BinaryenOp;
export const NeVecI64x2: BinaryenOp;
export const LtSVecI64x2: BinaryenOp;
export const GtSVecI64x2: BinaryenOp;
export const LeSVecI64x2: BinaryenOp;
export const GeSVecI64x2: BinaryenOp;
export const EqVecF32x4: BinaryenOp;
export const NeVecF32x4: BinaryenOp;
export const LtVecF32x4: BinaryenOp;
export const GtVecF32x4: BinaryenOp;
export const LeVecF32x4: BinaryenOp;
export const GeVecF32x4: BinaryenOp;
export const EqVecF64x2: BinaryenOp;
export const NeVecF64x2: BinaryenOp;
export const LtVecF64x2: BinaryenOp;
export const GtVecF64x2: BinaryenOp;
export const LeVecF64x2: BinaryenOp;
export const GeVecF64x2: BinaryenOp;
export const NotVec128: BinaryenOp;
export const AndVec128: BinaryenOp;
export const OrVec128: BinaryenOp;
export const XorVec128: BinaryenOp;
export const AndNotVec128: BinaryenOp;
export const BitselectVec128: BinaryenOp;
export const RelaxedMaddVecF32x4: BinaryenOp;
export const RelaxedNmaddVecF32x4: BinaryenOp;
export const RelaxedMaddVecF64x2: BinaryenOp;
export const RelaxedNmaddVecF64x2: BinaryenOp;
export const LaneselectI8x16: BinaryenOp;
export const LaneselectI16x8: BinaryenOp;
export const LaneselectI32x4: BinaryenOp;
export const LaneselectI64x2: BinaryenOp;
export const DotI8x16I7x16AddSToVecI32x4: BinaryenOp;
export const AnyTrueVec128: BinaryenOp;
export const PopcntVecI8x16: BinaryenOp;
export const AbsVecI8x16: BinaryenOp;
export const NegVecI8x16: BinaryenOp;
export const AllTrueVecI8x16: BinaryenOp;
export const BitmaskVecI8x16: BinaryenOp;
export const ShlVecI8x16: BinaryenOp;
export const ShrSVecI8x16: BinaryenOp;
export const ShrUVecI8x16: BinaryenOp;
export const AddVecI8x16: BinaryenOp;
export const AddSatSVecI8x16: BinaryenOp;
export const AddSatUVecI8x16: BinaryenOp;
export const SubVecI8x16: BinaryenOp;
export const SubSatSVecI8x16: BinaryenOp;
export const SubSatUVecI8x16: BinaryenOp;
export const MinSVecI8x16: BinaryenOp;
export const MinUVecI8x16: BinaryenOp;
export const MaxSVecI8x16: BinaryenOp;
export const MaxUVecI8x16: BinaryenOp;
export const AvgrUVecI8x16: BinaryenOp;
export const AbsVecI16x8: BinaryenOp;
export const NegVecI16x8: BinaryenOp;
export const AllTrueVecI16x8: BinaryenOp;
export const BitmaskVecI16x8: BinaryenOp;
export const ShlVecI16x8: BinaryenOp;
export const ShrSVecI16x8: BinaryenOp;
export const ShrUVecI16x8: BinaryenOp;
export const AddVecI16x8: BinaryenOp;
export const AddSatSVecI16x8: BinaryenOp;
export const AddSatUVecI16x8: BinaryenOp;
export const SubVecI16x8: BinaryenOp;
export const SubSatSVecI16x8: BinaryenOp;
export const SubSatUVecI16x8: BinaryenOp;
export const MulVecI16x8: BinaryenOp;
export const MinSVecI16x8: BinaryenOp;
export const MinUVecI16x8: BinaryenOp;
export const MaxSVecI16x8: BinaryenOp;
export const MaxUVecI16x8: BinaryenOp;
export const AvgrUVecI16x8: BinaryenOp;
export const Q15MulrSatSVecI16x8: BinaryenOp;
export const ExtMulLowSVecI16x8: BinaryenOp;
export const ExtMulHighSVecI16x8: BinaryenOp;
export const ExtMulLowUVecI16x8: BinaryenOp;
export const ExtMulHighUVecI16x8: BinaryenOp;
export const DotSVecI16x8ToVecI32x4: BinaryenOp;
export const ExtMulLowSVecI32x4: BinaryenOp;
export const ExtMulHighSVecI32x4: BinaryenOp;
export const ExtMulLowUVecI32x4: BinaryenOp;
export const ExtMulHighUVecI32x4: BinaryenOp;
export const AbsVecI32x4: BinaryenOp;
export const NegVecI32x4: BinaryenOp;
export const AllTrueVecI32x4: BinaryenOp;
export const BitmaskVecI32x4: BinaryenOp;
export const ShlVecI32x4: BinaryenOp;
export const ShrSVecI32x4: BinaryenOp;
export const ShrUVecI32x4: BinaryenOp;
export const AddVecI32x4: BinaryenOp;
export const SubVecI32x4: BinaryenOp;
export const MulVecI32x4: BinaryenOp;
export const MinSVecI32x4: BinaryenOp;
export const MinUVecI32x4: BinaryenOp;
export const MaxSVecI32x4: BinaryenOp;
export const MaxUVecI32x4: BinaryenOp;
export const AbsVecI64x2: BinaryenOp;
export const NegVecI64x2: BinaryenOp;
export const AllTrueVecI64x2: BinaryenOp;
export const BitmaskVecI64x2: BinaryenOp;
export const ShlVecI64x2: BinaryenOp;
export const ShrSVecI64x2: BinaryenOp;
export const ShrUVecI64x2: BinaryenOp;
export const AddVecI64x2: BinaryenOp;
export const SubVecI64x2: BinaryenOp;
export const MulVecI64x2: BinaryenOp;
export const ExtMulLowSVecI64x2: BinaryenOp;
export const ExtMulHighSVecI64x2: BinaryenOp;
export const ExtMulLowUVecI64x2: BinaryenOp;
export const ExtMulHighUVecI64x2: BinaryenOp;
export const AbsVecF32x4: BinaryenOp;
export const NegVecF32x4: BinaryenOp;
export const SqrtVecF32x4: BinaryenOp;
export const AddVecF32x4: BinaryenOp;
export const SubVecF32x4: BinaryenOp;
export const MulVecF32x4: BinaryenOp;
export const DivVecF32x4: BinaryenOp;
export const MinVecF32x4: BinaryenOp;
export const MaxVecF32x4: BinaryenOp;
export const PMinVecF32x4: BinaryenOp;
export const PMaxVecF32x4: BinaryenOp;
export const CeilVecF32x4: BinaryenOp;
export const FloorVecF32x4: BinaryenOp;
export const TruncVecF32x4: BinaryenOp;
export const NearestVecF32x4: BinaryenOp;
export const AbsVecF64x2: BinaryenOp;
export const NegVecF64x2: BinaryenOp;
export const SqrtVecF64x2: BinaryenOp;
export const AddVecF64x2: BinaryenOp;
export const SubVecF64x2: BinaryenOp;
export const MulVecF64x2: BinaryenOp;
export const DivVecF64x2: BinaryenOp;
export const MinVecF64x2: BinaryenOp;
export const MaxVecF64x2: BinaryenOp;
export const PMinVecF64x2: BinaryenOp;
export const PMaxVecF64x2: BinaryenOp;
export const CeilVecF64x2: BinaryenOp;
export const FloorVecF64x2: BinaryenOp;
export const TruncVecF64x2: BinaryenOp;
export const NearestVecF64x2: BinaryenOp;
export const ExtAddPairwiseSVecI8x16ToI16x8: BinaryenOp;
export const ExtAddPairwiseUVecI8x16ToI16x8: BinaryenOp;
export const ExtAddPairwiseSVecI16x8ToI32x4: BinaryenOp;
export const ExtAddPairwiseUVecI16x8ToI32x4: BinaryenOp;
export const TruncSatSVecF32x4ToVecI32x4: BinaryenOp;
export const TruncSatUVecF32x4ToVecI32x4: BinaryenOp;
export const ConvertSVecI32x4ToVecF32x4: BinaryenOp;
export const ConvertUVecI32x4ToVecF32x4: BinaryenOp;
export const Load8SplatVec128: BinaryenOp;
export const Load16SplatVec128: BinaryenOp;
export const Load32SplatVec128: BinaryenOp;
export const Load64SplatVec128: BinaryenOp;
export const Load8x8SVec128: BinaryenOp;
export const Load8x8UVec128: BinaryenOp;
export const Load16x4SVec128: BinaryenOp;
export const Load16x4UVec128: BinaryenOp;
export const Load32x2SVec128: BinaryenOp;
export const Load32x2UVec128: BinaryenOp;
export const Load32ZeroVec128: BinaryenOp;
export const Load64ZeroVec128: BinaryenOp;
export const Load8LaneVec128: BinaryenOp;
export const Load16LaneVec128: BinaryenOp;
export const Load32LaneVec128: BinaryenOp;
export const Load64LaneVec128: BinaryenOp;
export const Store8LaneVec128: BinaryenOp;
export const Store16LaneVec128: BinaryenOp;
export const Store32LaneVec128: BinaryenOp;
export const Store64LaneVec128: BinaryenOp;
export const NarrowSVecI16x8ToVecI8x16: BinaryenOp;
export const NarrowUVecI16x8ToVecI8x16: BinaryenOp;
export const NarrowSVecI32x4ToVecI16x8: BinaryenOp;
export const NarrowUVecI32x4ToVecI16x8: BinaryenOp;
export const ExtendLowSVecI8x16ToVecI16x8: BinaryenOp;
export const ExtendHighSVecI8x16ToVecI16x8: BinaryenOp;
export const ExtendLowUVecI8x16ToVecI16x8: BinaryenOp;
export const ExtendHighUVecI8x16ToVecI16x8: BinaryenOp;
export const ExtendLowSVecI16x8ToVecI32x4: BinaryenOp;
export const ExtendHighSVecI16x8ToVecI32x4: BinaryenOp;
export const ExtendLowUVecI16x8ToVecI32x4: BinaryenOp;
export const ExtendHighUVecI16x8ToVecI32x4: BinaryenOp;
export const ExtendLowSVecI32x4ToVecI64x2: BinaryenOp;
export const ExtendHighSVecI32x4ToVecI64x2: BinaryenOp;
export const ExtendLowUVecI32x4ToVecI64x2: BinaryenOp;
export const ExtendHighUVecI32x4ToVecI64x2: BinaryenOp;
export const ConvertLowSVecI32x4ToVecF64x2: BinaryenOp;
export const ConvertLowUVecI32x4ToVecF64x2: BinaryenOp;
export const TruncSatZeroSVecF64x2ToVecI32x4: BinaryenOp;
export const TruncSatZeroUVecF64x2ToVecI32x4: BinaryenOp;
export const DemoteZeroVecF64x2ToVecF32x4: BinaryenOp;
export const PromoteLowVecF32x4ToVecF64x2: BinaryenOp;
export const RelaxedTruncSVecF32x4ToVecI32x4: BinaryenOp;
export const RelaxedTruncUVecF32x4ToVecI32x4: BinaryenOp;
export const RelaxedTruncZeroSVecF64x2ToVecI32x4: BinaryenOp;
export const RelaxedTruncZeroUVecF64x2ToVecI32x4: BinaryenOp;
export const SwizzleVecI8x16: BinaryenOp;
export const RelaxedSwizzleVecI8x16: BinaryenOp;
export const RelaxedMinVecF32x4: BinaryenOp;
export const RelaxedMaxVecF32x4: BinaryenOp;
export const RelaxedMinVecF64x2: BinaryenOp;
export const RelaxedMaxVecF64x2: BinaryenOp;
export const RelaxedQ15MulrSVecI16x8: BinaryenOp;
export const DotI8x16I7x16SToVecI16x8: BinaryenOp;
export const RefAsNonNull: BinaryenOp;
export const RefAsExternInternalize: BinaryenOp;
export const RefAsExternExternalize: BinaryenOp;
export const RefAsAnyConvertExtern: BinaryenOp;
export const RefAsExternConvertAny: BinaryenOp;
export const BrOnNull: BinaryenOp;
export const BrOnNonNull: BinaryenOp;
export const BrOnCast: BinaryenOp;
export const BrOnCastFail: BinaryenOp;
export const StringNewLossyUTF8Array: BinaryenOp;
export const StringNewWTF16Array: BinaryenOp;
export const StringNewFromCodePoint: BinaryenOp;
export const StringMeasureUTF8: BinaryenOp;
export const StringMeasureWTF16: BinaryenOp;
export const StringEncodeLossyUTF8Array: BinaryenOp;
export const StringEncodeWTF16Array: BinaryenOp;
export const StringEqEqual: BinaryenOp;
export const StringEqCompare: BinaryenOp;